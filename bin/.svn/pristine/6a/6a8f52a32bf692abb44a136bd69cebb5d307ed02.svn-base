(:
 : -------------------------------------------------------------------------
 :
 : items.xqm.mod.xq - Document me!
 :
 : -------------------------------------------------------------------------
 :)
 
(:~@operations
   <operations>
      <operation name="names" type="node()" func="names">     
         <param name="doc" type="docURI*" sep="WS" pgroup="input"/>
         <param name="docs" type="docDFD*" sep=";" pgroup="input"/>           
         <param name="dcat" type="docCAT*" sep="WS" pgroup="input"/>
         <pgroup name="input" minOccurs="1"/>         
      </operation> 
      <operation name="paths" type="node()" func="paths">     
         <param name="doc" type="docURI*" sep="WS" pgroup="input"/>
         <param name="docs" type="docDFD*" sep=";" pgroup="input"/>           
         <param name="dcat" type="docCAT*" sep="WS" pgroup="input"/>
         <pgroup name="input" minOccurs="1"/>         
      </operation> 
      <operation name="values" type="node()" func="values">     
         <param name="doc" type="docURI*" sep="WS" pgroup="input"/>
         <param name="docs" type="docDFD*" sep=";" pgroup="input"/>           
         <param name="dcat" type="docCAT*" sep="WS" pgroup="input"/>
         <pgroup name="input" minOccurs="1"/>         
      </operation>
    </operations>  
:)  

module namespace f="http://www.ttools.org/xclear4/xquery-functions";
import module namespace tt="http://www.ttools.org/xquery-functions" at 
    "_request.mod.xq",
    "_reportAssistent.mod.xq",
    "_nameFilter.mod.xq";
    
declare namespace z="http://www.ttools.org/xclear4/structure";

(:~
 : Document me!
 :
 : @param request the operation request
 : @return a report describing ...
 :) 
declare function f:names($request as element())
        as element() {
    let $docs := tt:getParams($request, 'doc docs dcat')    
    return
        <z:names countDocs="{count($docs)}">{
           ()
        }</z:names>
};        
 
(:~
 : Document me!
 :
 : @param request the operation request
 : @return a report describing ...
 :) 
declare function f:paths($request as element())
        as element() {
    let $docs := tt:getParams($request, 'doc docs dcat')    
    return
        <z:paths countDocs="{count($docs)}">{
           ()
        }</z:paths>
};        
 
(:~
 : Document me!
 :
 : @param request the operation request
 : @return a report describing ...
 :) 
declare function f:values($request as element())
        as element() {
    let $docs := tt:getParams($request, 'doc docs dcat')    
    return
        <z:values countDocs="{count($docs)}">{
           ()
        }</z:values>
};        
